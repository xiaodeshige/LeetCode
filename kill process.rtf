{\rtf1\ansi\ansicpg1252\cocoartf1504\cocoasubrtf830
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\margl1440\margr1440\vieww33400\viewh21000\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 class Solution \{\
    public List<Integer> killProcess(List<Integer> pid, List<Integer> ppid, int kill) \{\
        //map parent-child relationship\
        Map<Integer, List<Integer>> m=new HashMap<>();\
        for(int i=0; i<ppid.size(); i++)\{\
            if(!m.containsKey(ppid.get(i)))\
                m.put(ppid.get(i), new ArrayList<Integer>());\
            \
            m.get(ppid.get(i)).add(pid.get(i));\
        \}\
        \
        Queue<Integer> q=new LinkedList<>();\
        q.offer(kill);\
        \
        List<Integer> res=new ArrayList<>();\
        \
        while(!q.isEmpty())\{\
            int cur=q.poll();\
            res.add(cur);\
            \
            if(m.containsKey(cur))\{\
               for(int i=0; i<m.get(cur).size(); i++)\
                   q.offer(m.get(cur).get(i));\
            \}\
        \}\
        \
        return res;\
    \}\
\}}