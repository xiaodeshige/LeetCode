/**
 * Definition for an interval.
 * public class Interval {
 *     int start;
 *     int end;
 *     Interval() { start = 0; end = 0; }
 *     Interval(int s, int e) { start = s; end = e; }
 * }
 */
public class Solution {
    public int minMeetingRooms(Interval[] intervals) {
        //1 jeantimex greedy approach
        //2 stefan
        if(intervals==null||intervals.length==0) return 0;
        
        PriorityQueue<Interval> pq=new PriorityQueue<>(new Comparator<Interval>(){
            public int compare(Interval a, Interval b){
                return a.end-b.end;
            }
        }           
        );
        
        Arrays.sort(intervals, new Comparator<Interval>(){
            public int compare(Interval a, Interval b){
                return a.start-b.start;
            }
        });
        
        pq.offer(intervals[0]);
        
        for(int i=1; i<intervals.length; i++){
            Interval top=pq.poll();
            if(intervals[i].start>=top.end){
                top.end=intervals[i].end;
            }
            else{
                pq.offer(intervals[i]);
            }
            pq.offer(top);
        }
        return pq.size();
    }
}