class Solution {
    public int longestPalindromeSubseq(String s) {
        if(s==null||s.length()==0) return 0;
        
        int len=s.length();
        int[][] dp=new int[len][len];
        int maxLen=1;
        
        for(int i=0; i<len; i++){
            dp[i][i]=1;
        }
        
        for(int i=0; i<len-1; i++){
            if(s.charAt(i)==s.charAt(i+1))
                dp[i][i+1]=2;
            else
                dp[i][i+1]=1;        
        }
        
        for(int length=2; length<len; length++){
            for(int i=0; i<len-length; i++){                     
                if(s.charAt(i)==s.charAt(i+length))
                    dp[i][i+length]=dp[i+1][i+length-1]+2;
                else
                    dp[i][i+length]=Math.max(dp[i+1][i+length], dp[i][i+length-1]);               
            }
        }                
        
        return dp[0][len-1];        
    }
   
}